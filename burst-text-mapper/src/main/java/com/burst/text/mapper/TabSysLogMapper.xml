<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.burst.text.mapper.TabSysLogMapper">
    <resultMap id="BaseResultMap" type="com.burst.text.entity.TabSysLog">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="node" jdbcType="VARCHAR" property="node"/>
        <result column="operate" jdbcType="VARCHAR" property="operate"/>
        <result column="log_content" jdbcType="VARCHAR" property="logContent"/>
        <result column="method" jdbcType="VARCHAR" property="method"/>
        <result column="log_level" jdbcType="VARCHAR" property="logLevel"/>
        <result column="param" jdbcType="VARCHAR" property="param"/>
        <result column="log_source" jdbcType="VARCHAR" property="logSource"/>
        <result column="created_date" jdbcType="TIMESTAMP" property="createdDate"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, user_id, node, operate, log_content, method, log_level, param, log_source, created_date
    </sql>
    <select id="selectByExample" parameterType="com.burst.text.entity.TabSysLogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tab_sys_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tab_sys_log
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from tab_sys_log
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.burst.text.entity.TabSysLogExample">
        delete from tab_sys_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.burst.text.entity.TabSysLog">
        insert into tab_sys_log (id, user_id, node,
        operate, log_content, method,
        log_level, param, log_source,
        created_date)
        values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{node,jdbcType=VARCHAR},
        #{operate,jdbcType=VARCHAR}, #{logContent,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR},
        #{logLevel,jdbcType=VARCHAR}, #{param,jdbcType=VARCHAR}, #{logSource,jdbcType=VARCHAR},
        #{createdDate,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.burst.text.entity.TabSysLog">
        insert into tab_sys_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="node != null">
                node,
            </if>
            <if test="operate != null">
                operate,
            </if>
            <if test="logContent != null">
                log_content,
            </if>
            <if test="method != null">
                method,
            </if>
            <if test="logLevel != null">
                log_level,
            </if>
            <if test="param != null">
                param,
            </if>
            <if test="logSource != null">
                log_source,
            </if>
            <if test="createdDate != null">
                created_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="node != null">
                #{node,jdbcType=VARCHAR},
            </if>
            <if test="operate != null">
                #{operate,jdbcType=VARCHAR},
            </if>
            <if test="logContent != null">
                #{logContent,jdbcType=VARCHAR},
            </if>
            <if test="method != null">
                #{method,jdbcType=VARCHAR},
            </if>
            <if test="logLevel != null">
                #{logLevel,jdbcType=VARCHAR},
            </if>
            <if test="param != null">
                #{param,jdbcType=VARCHAR},
            </if>
            <if test="logSource != null">
                #{logSource,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null">
                #{createdDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.burst.text.entity.TabSysLogExample" resultType="java.lang.Long">
        select count(*) from tab_sys_log
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tab_sys_log
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.node != null">
                node = #{record.node,jdbcType=VARCHAR},
            </if>
            <if test="record.operate != null">
                operate = #{record.operate,jdbcType=VARCHAR},
            </if>
            <if test="record.logContent != null">
                log_content = #{record.logContent,jdbcType=VARCHAR},
            </if>
            <if test="record.method != null">
                method = #{record.method,jdbcType=VARCHAR},
            </if>
            <if test="record.logLevel != null">
                log_level = #{record.logLevel,jdbcType=VARCHAR},
            </if>
            <if test="record.param != null">
                param = #{record.param,jdbcType=VARCHAR},
            </if>
            <if test="record.logSource != null">
                log_source = #{record.logSource,jdbcType=VARCHAR},
            </if>
            <if test="record.createdDate != null">
                created_date = #{record.createdDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tab_sys_log
        set id = #{record.id,jdbcType=VARCHAR},
        user_id = #{record.userId,jdbcType=VARCHAR},
        node = #{record.node,jdbcType=VARCHAR},
        operate = #{record.operate,jdbcType=VARCHAR},
        log_content = #{record.logContent,jdbcType=VARCHAR},
        method = #{record.method,jdbcType=VARCHAR},
        log_level = #{record.logLevel,jdbcType=VARCHAR},
        param = #{record.param,jdbcType=VARCHAR},
        log_source = #{record.logSource,jdbcType=VARCHAR},
        created_date = #{record.createdDate,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.burst.text.entity.TabSysLog">
        update tab_sys_log
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="node != null">
                node = #{node,jdbcType=VARCHAR},
            </if>
            <if test="operate != null">
                operate = #{operate,jdbcType=VARCHAR},
            </if>
            <if test="logContent != null">
                log_content = #{logContent,jdbcType=VARCHAR},
            </if>
            <if test="method != null">
                method = #{method,jdbcType=VARCHAR},
            </if>
            <if test="logLevel != null">
                log_level = #{logLevel,jdbcType=VARCHAR},
            </if>
            <if test="param != null">
                param = #{param,jdbcType=VARCHAR},
            </if>
            <if test="logSource != null">
                log_source = #{logSource,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null">
                created_date = #{createdDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.burst.text.entity.TabSysLog">
        update tab_sys_log
        set user_id = #{userId,jdbcType=VARCHAR},
        node = #{node,jdbcType=VARCHAR},
        operate = #{operate,jdbcType=VARCHAR},
        log_content = #{logContent,jdbcType=VARCHAR},
        method = #{method,jdbcType=VARCHAR},
        log_level = #{logLevel,jdbcType=VARCHAR},
        param = #{param,jdbcType=VARCHAR},
        log_source = #{logSource,jdbcType=VARCHAR},
        created_date = #{createdDate,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>